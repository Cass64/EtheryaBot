import os  
from dotenv import load_dotenv
import discord
from discord import app_commands
from discord.ext import commands
import random
from keep_alive import keep_alive
import json
import asyncio


load_dotenv()


token = os.getenv('TOKEN_BOT_DISCORD')

# Intents et configuration du bot
intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!!", intents=intents)

@bot.event
async def on_ready():
    print(f"Bot connect√© en tant que {bot.user}")

#------------------------------------------------------------------------- Commandes d'√©conomie : !!break

from discord.ext import commands

# Liste des r√¥les autoris√©s pour ex√©cuter les commandes de mod√©ration
AUTHORIZED_ROLES = ["‚Ä≥ [ùë∫◊•] Perm Anti Protect"]

@bot.command(name="break")
async def breakk(ctx, membre: discord.Member):
    """Ajoute un r√¥le fixe √† un utilisateur et retire un autre r√¥le fixe √† l'ex√©cutant.
       Seuls ceux ayant '[ùë∫◊•] Perm Anti Protect' peuvent utiliser cette commande.
    """
    ROLE_REQUIRED = "‚Ä≥ [ùë∫◊•] Perm Anti Protect"  # R√¥le requis pour ex√©cuter la commande
    ROLE_TO_REMOVE_BREAK = "‚Ä≥ [ùë∫◊•] Protect !!rob"       # R√¥le √† ajouter au membre cibl√©
    ROLE_TO_REMOVE = "‚Ä≥ [ùë∫◊•] Perm Anti Protect"     # R√¥le √† retirer √† l'ex√©cutant

    role_required = discord.utils.get(ctx.guild.roles, name=ROLE_REQUIRED)
    role_to_remove_break = discord.utils.get(ctx.guild.roles, name=ROLE_TO_REMOVE_BREAK)
    role_to_remove = discord.utils.get(ctx.guild.roles, name=ROLE_TO_REMOVE)

    if not role_required or not role_to_remove_break or not role_to_remove:
        return await ctx.send("‚ùå L'un des r√¥les sp√©cifi√©s n'existe pas.")

    if role_required not in ctx.author.roles:
      return await ctx.send("‚ùå Vous n'avez pas la permission d'utiliser cette commande.")

# V√©rifie si le membre a le r√¥le avant de le retirer
    if role_to_remove_break not in membre.roles:
        await ctx.send(f"{membre.mention} n'a pas le r√¥le {role_to_remove_break.mention}. <:haram:1176229029796380702>")
    else:
        await membre.remove_roles(role_to_remove_break)
        await ctx.send(f"Le r√¥le {role_to_remove_break.mention} a √©t√© enlev√©. <a:fete:1172810362261880873>")


    # Retirer le r√¥le √† l'ex√©cutant
    if role_to_remove in ctx.author.roles:
        await ctx.author.remove_roles(role_to_remove)
        await ctx.send(f"Le r√¥le {role_to_remove.mention} vous a √©t√© retir√©. <a:emoji:1341500461475168369>")
    else:
        await ctx.send(f"{ctx.author.mention}, vous n'aviez pas le r√¥le {role_to_remove.mention}. ‚ùå")

#------------------------------------------------------------------------- Commandes d'√©conomie : !!malus

AUTHORIZED_ROLES = ["‚Ä≥ [ùë∫◊•] Perm Ajout Malus"]

@bot.command(name="malus")
async def malus(ctx, membre: discord.Member):
    """Ajoute un r√¥le fixe √† un utilisateur, retire un autre r√¥le fixe √† l'ex√©cutant, 
       et supprime le r√¥le ajout√© apr√®s une dur√©e sp√©cifi√©e.
       Seuls ceux ayant '[ùë∫◊•] Perm Anti Protect' peuvent utiliser cette commande.
    """

    ROLE_REQUIRED_MALUS = "‚Ä≥ [ùë∫◊•] Perm Ajout Malus"  # R√¥le requis pour ex√©cuter la commande
    ROLE_TO_ADD_MALUS = "‚Ä≥ [ùë∫◊•] Malus Temporelle"  # Le r√¥le temporaire √† ajouter
    ROLE_TO_REMOVE_MALUS = "‚Ä≥ [ùë∫◊•] Perm Ajout Malus"  # R√¥le √† retirer √† l'ex√©cutant

    role_required_malus = discord.utils.get(ctx.guild.roles, name=ROLE_REQUIRED_MALUS)
    role_to_add_malus = discord.utils.get(ctx.guild.roles, name=ROLE_TO_ADD_MALUS)
    role_to_remove_malus = discord.utils.get(ctx.guild.roles, name=ROLE_TO_REMOVE_MALUS)

    if not role_required_malus or not role_to_add_malus or not role_to_remove_malus:
        return await ctx.send("‚ùå L'un des r√¥les sp√©cifi√©s n'existe pas.")

    if role_required_malus not in ctx.author.roles:
        return await ctx.send("‚ùå Vous n'avez pas la permission d'utiliser cette commande.")

    # Ajouter le r√¥le temporaire √† l'utilisateur
    await membre.add_roles(role_to_add_malus)
    await ctx.send(f"Le r√¥le {role_to_add_malus.mention} a √©t√© ajout√©. <a:fete:1172810362261880873>") 

    # Retirer le r√¥le √† l'ex√©cutant
    if role_to_remove_malus in ctx.author.roles:
        await ctx.author.remove_roles(role_to_remove_malus)
        await ctx.send(f"Le r√¥le {role_to_remove_malus.mention} a √©t√© retir√©. <a:emoji:1341500461475168369>")
    else:
        await ctx.send(f"{ctx.author.mention}, vous n'aviez pas le r√¥le {role_to_remove_malus.mention}. <:haram:1176229029796380702>")

    # Temps pendant lequel le r√¥le restera (exemple : 1 heure)
    await asyncio.sleep(86400)  # 3600 secondes = 1 heure

    # Retirer le r√¥le apr√®s le d√©lai
    await membre.remove_roles(role_to_add_malus)
    await ctx.send(f"Le r√¥le {role_to_add_malus.mention} a √©t√© retir√© de {membre.mention} apr√®s 1 jour. ‚è≥")

#------------------------------------------------------------------------- Commandes d'√©conomie : !!annihilation

@bot.command(name="annihilation")
async def annihilation(ctx, membre: discord.Member):
    """Ajoute le r√¥le 'Cible D'an√©antissement' √† un utilisateur si l'ex√©cutant a le r√¥le 'Perm Crystal D'an√©antissement'.
       Un message est envoy√© automatiquement dans un salon sp√©cifique et l'ex√©cutant perd son r√¥le 'Perm Crystal D'an√©antissement'.
    """
    
    ROLE_REQUIRED = "‚Ä≥ [ùë∫◊•] Perm Crystal D'an√©antissement"  # R√¥le requis pour ex√©cuter la commande
    ROLE_TO_ADD = "‚Ä≥ [ùë∫◊•] Cible D'an√©antissement"  # R√¥le √† ajouter
    CHANNEL_ID = 1341844144032714833  # ID du salon o√π envoyer le message

    role_required = discord.utils.get(ctx.guild.roles, name=ROLE_REQUIRED)
    role_to_add = discord.utils.get(ctx.guild.roles, name=ROLE_TO_ADD)
    channel = bot.get_channel(CHANNEL_ID)

    if not role_required or not role_to_add or not channel:
        return await ctx.send("‚ùå L'un des r√¥les ou le salon sp√©cifi√© n'existe pas.")

    if role_required not in ctx.author.roles:
        return await ctx.send("‚ùå Vous n'avez pas la permission d'utiliser cette commande.")

    # Ajouter le r√¥le √† la cible
    await membre.add_roles(role_to_add)
    await ctx.send(f"Le r√¥le {role_to_add.mention} a √©t√© ajout√© √† {membre.mention}. ‚ò†Ô∏è")

    # Retirer le r√¥le de l'ex√©cutant
    await ctx.author.remove_roles(role_required)
    await ctx.send(f"Le r√¥le {role_required.mention} vous a √©t√© retir√©, vous ne pouvez plus utiliser cette commande. ‚ùå")

    # Envoyer un message dans le salon sp√©cifi√©
    await channel.send(f"{membre.mention} a √©t√© cibl√© par un an√©antissement <@&‚ÅÇ       „ÄÄP√¥le Directionnel„ÄÄ„ÄÄ„ÄÄ‚ÅÇ>. ‚ö°")

#------------------------------------------------------------------------- Commandes d'√©conomie : !!gravity

@bot.command(name="gravity")
async def gravity(ctx, membre: discord.Member):
    """Ajoute le r√¥le '‚Ä≥ [ùë∫◊•] Gravit√© Forte' √† un utilisateur, retire le r√¥le '‚Ä≥ [ùë∫◊•] Perm Gravit√© Forte' de l'ex√©cutant,
       et envoie un message confirmant l'op√©ration.
       Seuls ceux ayant le r√¥le '‚Ä≥ [ùë∫◊•] Perm Gravit√© Forte' peuvent utiliser cette commande.
    """

    ROLE_REQUIRED = "‚Ä≥ [ùë∫◊•] Perm Gravit√© Forte"  # R√¥le requis pour ex√©cuter la commande
    ROLE_TO_ADD = "‚Ä≥ [ùë∫◊•] Gravit√© Forte"  # R√¥le √† ajouter
    ROLE_TO_REMOVE = "‚Ä≥ [ùë∫◊•] Perm Gravit√© Forte"  # R√¥le √† retirer √† l'ex√©cutant

    role_required = discord.utils.get(ctx.guild.roles, name=ROLE_REQUIRED)
    role_to_add = discord.utils.get(ctx.guild.roles, name=ROLE_TO_ADD)
    role_to_remove = discord.utils.get(ctx.guild.roles, name=ROLE_TO_REMOVE)

    if not role_required or not role_to_add or not role_to_remove:
        return await ctx.send("‚ùå L'un des r√¥les sp√©cifi√©s n'existe pas.")

    if role_required not in ctx.author.roles:
        return await ctx.send("‚ùå Vous n'avez pas la permission d'utiliser cette commande.")

    # Ajouter le r√¥le √† la cible
    await membre.add_roles(role_to_add)
    await ctx.send(f"Le r√¥le {role_to_add.mention} a √©t√© ajout√© √† {membre.mention}. üåå")

    # Retirer le r√¥le √† l'ex√©cutant
    if role_to_remove in ctx.author.roles:
        await ctx.author.remove_roles(role_to_remove)
        await ctx.send(f"Le r√¥le {role_to_remove.mention} vous a √©t√© retir√©. ‚ùå")
    else:
        await ctx.send(f"{ctx.author.mention}, vous n'aviez pas le r√¥le {role_to_remove.mention}. ‚ùå")

#------------------------------------------------------------------------- Ignorer les messages des autres bots

@bot.event
async def on_message(message):
    # Ignorer les messages envoy√©s par d'autres bots
    if message.author.bot:
        return

    # V√©rifie si le message mentionne le bot
    if bot.user.mentioned_in(message):
        # Envoie un message avec le pr√©fixe du bot
        await message.channel.send(f"<a:piece:1289678641982210059> Mon pr√©fixe sur ce serveur est: {bot.command_prefix}" <:dab:1168325108595687434> !)

    # Assurez-vous que le bot continue de traiter les commandes
    await bot.process_commands(message)
    
#------------------------------------------------------------------------- Lancement du bot
keep_alive()
bot.run(token)
