import os  
from dotenv import load_dotenv
import discord
from discord import app_commands
from discord.ext import commands
import random
from keep_alive import keep_alive
import json
import asyncio


load_dotenv()


token = os.getenv('TOKEN_BOT_DISCORD')

# Intents et configuration du bot
intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!!", intents=intents)

@bot.event
async def on_ready():
    print(f"Bot connect√© en tant que {bot.user}")

#------------------------------------------------------------------------- Commandes d'√©conomie : !!break

from discord.ext import commands

# Liste des r√¥les autoris√©s pour ex√©cuter les commandes de mod√©ration
AUTHORIZED_ROLES = ["‚Ä≥ [ùë∫◊•] Perm Anti Protect"]

@bot.command(name="break")
async def breakk(ctx, membre: discord.Member):
    """Ajoute un r√¥le fixe √† un utilisateur et retire un autre r√¥le fixe √† l'ex√©cutant.
       Seuls ceux ayant '[ùë∫◊•] Perm Anti Protect' peuvent utiliser cette commande.
    """

    ROLE_REQUIRED = "‚Ä≥ [ùë∫◊•] Perm Anti Protect"  # R√¥le requis pour ex√©cuter la commande
    ROLE_TO_REMOVE_BREAK = "‚Ä≥ [ùë∫◊•] Protect !!rob"       # R√¥le √† ajouter au membre cibl√©
    ROLE_TO_REMOVE = "‚Ä≥ [ùë∫◊•] Perm Anti Protect"     # R√¥le √† retirer √† l'ex√©cutant

    role_required = discord.utils.get(ctx.guild.roles, name=ROLE_REQUIRED)
    role_to_remove_break = discord.utils.get(ctx.guild.roles, name=ROLE_TO_REMOVE_BREAK)
    role_to_remove = discord.utils.get(ctx.guild.roles, name=ROLE_TO_REMOVE)

    if not role_required or not role_to_remove_break or not role_to_remove:
        return await ctx.send("‚ùå L'un des r√¥les sp√©cifi√©s n'existe pas.")

    if role_required not in ctx.author.roles:
      return await ctx.send("‚ùå Vous n'avez pas la permission d'utiliser cette commande.")

# V√©rifie si le membre a le r√¥le avant de le retirer
    if role_to_remove_break not in membre.roles:
        await ctx.send(f"{membre.mention} n'a pas le r√¥le {role_to_remove_break.mention}. <:haram:1176229029796380702>")
    else:
        await membre.remove_roles(role_to_remove_break)
        await ctx.send(f"Le r√¥le {role_to_remove_break.mention} a √©t√© enlev√©. <a:fete:1172810362261880873>")


    # Retirer le r√¥le √† l'ex√©cutant
    if role_to_remove in ctx.author.roles:
        await ctx.author.remove_roles(role_to_remove)
        await ctx.send(f"Le r√¥le {role_to_remove.mention} vous a √©t√© retir√©. <a:emoji:1341500461475168369>")
    else:
        await ctx.send(f"{ctx.author.mention}, vous n'aviez pas le r√¥le {role_to_remove.mention}. ‚ùå")

#------------------------------------------------------------------------- Commandes d'√©conomie : !!malus

AUTHORIZED_ROLES = ["‚Ä≥ [ùë∫◊•] Perm Ajout Malus"]

@bot.command(name="malus")
async def malus(ctx, membre: discord.Member):
    """Ajoute un r√¥le fixe √† un utilisateur, retire un autre r√¥le fixe √† l'ex√©cutant, 
       et supprime le r√¥le ajout√© apr√®s une dur√©e sp√©cifi√©e.
       Seuls ceux ayant '[ùë∫◊•] Perm Anti Protect' peuvent utiliser cette commande.
    """

    ROLE_REQUIRED_MALUS = "‚Ä≥ [ùë∫◊•] Perm Ajout Malus"  # R√¥le requis pour ex√©cuter la commande
    ROLE_TO_ADD_MALUS = "‚Ä≥ [ùë∫◊•] Malus"  # Le r√¥le temporaire √† ajouter
    ROLE_TO_REMOVE_MALUS = "‚Ä≥ [ùë∫◊•] Perm Ajout Malus"  # R√¥le √† retirer √† l'ex√©cutant

    role_required_malus = discord.utils.get(ctx.guild.roles, name=ROLE_REQUIRED_MALUS)
    role_to_add_malus = discord.utils.get(ctx.guild.roles, name=ROLE_TO_ADD_MALUS)
    role_to_remove_malus = discord.utils.get(ctx.guild.roles, name=ROLE_TO_REMOVE_MALUS)

    if not role_required_malus or not role_to_add_malus or not role_to_remove_malus:
        return await ctx.send("‚ùå L'un des r√¥les sp√©cifi√©s n'existe pas.")

    if role_required_malus not in ctx.author.roles:
        return await ctx.send("‚ùå Vous n'avez pas la permission d'utiliser cette commande.")

    # Ajouter le r√¥le temporaire √† l'utilisateur
    await membre.add_roles(role_to_add_malus)
    await ctx.send(f"Le r√¥le {role_to_add_malus.mention} a √©t√© ajout√©. <a:fete:1172810362261880873>") 

    # Retirer le r√¥le √† l'ex√©cutant
    if role_to_remove_malus in ctx.author.roles:
        await ctx.author.remove_roles(role_to_remove_malus)
        await ctx.send(f"Le r√¥le {role_to_remove_malus.mention} a √©t√© retir√©. <a:emoji:1341500461475168369>")
    else:
        await ctx.send(f"{ctx.author.mention}, vous n'aviez pas le r√¥le {role_to_remove_malus.mention}. <:haram:1176229029796380702>")

    # Temps pendant lequel le r√¥le restera (exemple : 1 heure)
    await asyncio.sleep(86400)  # 3600 secondes = 1 heure

    # Retirer le r√¥le apr√®s le d√©lai
    await membre.remove_roles(role_to_add_malus)
    await ctx.send(f"Le r√¥le {role_to_add_malus.mention} a √©t√© retir√© de {membre.mention} apr√®s 1 jour. ‚è≥")

#------------------------------------------------------------------------- Lancement du bot
keep_alive()
bot.run(token)
